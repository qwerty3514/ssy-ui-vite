{"version":3,"file":"ssy-ui.iife.js","sources":["../src/button/Button.tsx","../src/SFCButton.vue","../src/SFCButton.vue","../src/TSXButton.tsx","../src/entry.ts"],"sourcesContent":["// Button.tsx (最终精修版)\r\nimport { computed, defineComponent, type PropType } from 'vue'\r\nimport 'virtual:uno.css'\r\n\r\nexport type ButtonSize = 'small' | 'medium' | 'large'\r\nexport type ButtonColor =\r\n  | 'black' | 'gray' | 'red' | 'yellow' | 'green' | 'blue' | 'indigo' | 'purple' | 'pink'\r\n\r\nexport default defineComponent({\r\n  name: 'SButton',\r\n  props: {\r\n    size: {\r\n      type: String as PropType<ButtonSize>,\r\n      default: 'medium',\r\n    },\r\n    color: {\r\n      type: String as PropType<ButtonColor>,\r\n      default: 'blue',\r\n    },\r\n    round: Boolean,\r\n    plain: Boolean,\r\n    icon: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n  },\r\n  setup(props, { slots }) {\r\n    const colorClass = {\r\n      // ... 颜色定义部分保持不变 ...\r\n      black: 'bg-black-500 hover:bg-black-400 border-black-500 text-white',\r\n      gray: 'bg-gray-500 hover:bg-gray-400 border-gray-500 text-white',\r\n      red: 'bg-red-500 hover:bg-red-400 border-red-500 text-white',\r\n      yellow: 'bg-yellow-500 hover:bg-yellow-400 border-yellow-500 text-white',\r\n      green: 'bg-green-500 hover:bg-green-400 border-green-500 text-white',\r\n      blue: 'bg-blue-500 hover:bg-blue-400 border-blue-500 text-white',\r\n      indigo: 'bg-indigo-500 hover:bg-indigo-400 border-indigo-500 text-white',\r\n      purple: 'bg-purple-500 hover:bg-purple-400 border-purple-500 text-white',\r\n      pink: 'bg-pink-500 hover:bg-pink-400 border-pink-500 text-white',\r\n    }\r\n    const plainColorClass = {\r\n      // ... plain 颜色定义部分保持不变 ...\r\n      black: 'bg-black-100 border-black-500 text-black-500',\r\n      gray: 'bg-gray-100 border-gray-500 text-gray-500',\r\n      red: 'bg-red-100 border-red-500 text-red-500',\r\n      yellow: 'bg-yellow-100 border-yellow-500 text-yellow-500',\r\n      green: 'bg-green-100 border-green-500 text-green-500',\r\n      blue: 'bg-blue-100 border-blue-500 text-blue-500',\r\n      indigo: 'bg-indigo-100 border-indigo-500 text-indigo-500',\r\n      purple: 'bg-purple-100 border-purple-500 text-purple-500',\r\n      pink: 'bg-pink-100 border-pink-500 text-pink-500',\r\n    }\r\n    const sizeClass = {\r\n      small: 'py-1 px-2 text-sm',\r\n      medium: 'py-1.5 px-3 text-base',\r\n      large: 'py-2 px-4 text-lg',\r\n    }\r\n\r\n    const classes = computed(() => [\r\n      'mx-1',\r\n      'hover:scale-105',\r\n      'transition duration-300 ease-in-out transform',\r\n      'cursor-pointer',\r\n      'border-solid',\r\n      'inline-flex items-center justify-center', // ✅ 新增：让内部元素垂直居中\r\n      props.round ? 'rounded-full' : 'rounded-lg',\r\n      props.plain ? plainColorClass[props.color] : colorClass[props.color],\r\n      sizeClass[props.size],\r\n    ].join(' '))\r\n\r\n    return () => (\r\n      <button class={classes.value}>\r\n        {/* ✅ 核心修复：移除了图标上的 p-3，并添加了与文字的间距 */}\r\n        {props.icon ? <i class={`i-ic-baseline-${props.icon} ${slots.default ? 'mr-1' : ''}`}></i> : ''}\r\n        {slots.default ? slots.default() : ''}\r\n      </button>\r\n    )\r\n  },\r\n})\r\n","<script lang=\"ts\">\r\nexport default {\r\n  name: 'SFCButton',\r\n}\r\n</script>\r\n\r\n<template>\r\n  <button>SFC Button</button>\r\n</template>\n","<script lang=\"ts\">\r\nexport default {\r\n  name: 'SFCButton',\r\n}\r\n</script>\r\n\r\n<template>\r\n  <button>SFC Button</button>\r\n</template>\n","import { defineComponent } from 'vue'\r\n\r\nexport default defineComponent({\r\n  name: 'TSXButton',\r\n  render() {\r\n    return <button>TSX Button</button>\r\n  },\r\n})\n","import type { App } from 'vue'\r\nimport SButton from './button/Button'\r\nimport SFCButton from './SFCButton.vue'\r\nimport TSXButton from './TSXButton'\r\nimport 'uno.css'\r\n// 导出单独组件\r\nexport { SButton, SFCButton, TSXButton }\r\n\r\n// 编写一个插件，实现一个 install 方法\r\nexport default {\r\n  install(app: App): void {\r\n    app.component('SButton', SButton)\r\n    app.component('SFCButton', SFCButton)\r\n    app.component('TSXButton', TSXButton)\r\n  },\r\n}\r\n"],"names":["SButton","name","props","size","type","String","default","color","round","Boolean","plain","icon","setup","slots","colorClass","black","gray","red","yellow","green","blue","indigo","purple","pink","plainColorClass","sizeClass","small","medium","large","classes","computed","join","_createVNode","class","value","_openBlock","_createElementBlock","TSXButton","render","_createTextVNode","entry","install","app","component","SFCButton"],"mappings":"+pVAQA,MAAAA,oBAA+B,CAC7BC,KAAM,UACNC,MAAO,CACLC,KAAM,CACJC,KAAMC,OACNC,QAAS,UAEXC,MAAO,CACLH,KAAMC,OACNC,QAAS,QAEXE,MAAOC,QACPC,MAAOD,QACPE,KAAM,CACJP,KAAMC,OACNC,QAAS,KAGbM,KAAAA,CAAMV,GAAOW,MAAEA,IACb,MAAMC,EAAa,CAEjBC,MAAO,8DACPC,KAAM,2DACNC,IAAK,wDACLC,OAAQ,iEACRC,MAAO,8DACPC,KAAM,2DACNC,OAAQ,iEACRC,OAAQ,iEACRC,KAAM,4DAEFC,EAAkB,CAEtBT,MAAO,+CACPC,KAAM,4CACNC,IAAK,yCACLC,OAAQ,kDACRC,MAAO,+CACPC,KAAM,4CACNC,OAAQ,kDACRC,OAAQ,kDACRC,KAAM,6CAEFE,EAAY,CAChBC,MAAO,oBACPC,OAAQ,wBACRC,MAAO,qBAGHC,EAAUC,EAAAA,UAAS,IAAM,CAC7B,OACA,kBACA,gDACA,iBACA,eACA,0CACA5B,EAAMM,MAAQ,eAAiB,aAC/BN,EAAMQ,MAAQc,EAAgBtB,EAAMK,OAASO,EAAWZ,EAAMK,OAC9DkB,EAAUvB,EAAMC,OAChB4B,KAAK,OAEP,MAAO,IAAAC,EAAAA,YAAA,SAAA,CAAAC,MACUJ,EAAQK,OAAK,CAEzBhC,EAAMS,KAAIqB,EAAAA,YAAA,IAAA,CAAAC,MAAa,iBAAiB/B,EAAMS,QAAQE,EAAMP,QAAU,OAAS,MAAI,MAAS,GAC5FO,EAAMP,QAAUO,EAAMP,UAAY,IAGzC,iFC3Ea,CACbL,KAAM,8CCKN,OAAAkC,EAAAA,YAAAC,EAAAA,mBAA2B,cAAnB,kBCLVC,oBAA+B,CAC7BpC,KAAM,YACNqC,OAAAA,IACEN,EAAAA,2BAAAO,EAAAA,gBAAA,kBCIJC,EAAe,CACb,OAAAC,CAAQC,GACNA,EAAIC,UAAU,UAAW3C,GACzB0C,EAAIC,UAAU,YAAaC,GAC3BF,EAAIC,UAAU,YAAaN,EAC7B"}